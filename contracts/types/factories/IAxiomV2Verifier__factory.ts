/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IAxiomV2Verifier,
  IAxiomV2VerifierInterface,
} from "../IAxiomV2Verifier";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "blockNumber",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "claimedBlockHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "prevHash",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "numFinal",
            type: "uint32",
          },
          {
            internalType: "bytes32[]",
            name: "merkleProof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct IAxiomV2Verifier.BlockHashWitness",
        name: "witness",
        type: "tuple",
      },
    ],
    name: "isBlockHashValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "claimedBlockHash",
        type: "bytes32",
      },
    ],
    name: "isRecentBlockHashValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IAxiomV2Verifier__factory {
  static readonly abi = _abi;
  static createInterface(): IAxiomV2VerifierInterface {
    return new utils.Interface(_abi) as IAxiomV2VerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAxiomV2Verifier {
    return new Contract(address, _abi, signerOrProvider) as IAxiomV2Verifier;
  }
}
