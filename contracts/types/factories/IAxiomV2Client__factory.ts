/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IAxiomV2Client,
  IAxiomV2ClientInterface,
} from "../IAxiomV2Client";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "callerAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "querySchema",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
    ],
    name: "AxiomV2Call",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "sourceChainId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "callerAddr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "querySchema",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "axiomResults",
        type: "bytes32[]",
      },
      {
        internalType: "bytes",
        name: "callbackExtraData",
        type: "bytes",
      },
    ],
    name: "axiomV2Callback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "axiomV2QueryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IAxiomV2Client__factory {
  static readonly abi = _abi;
  static createInterface(): IAxiomV2ClientInterface {
    return new utils.Interface(_abi) as IAxiomV2ClientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAxiomV2Client {
    return new Contract(address, _abi, signerOrProvider) as IAxiomV2Client;
  }
}
