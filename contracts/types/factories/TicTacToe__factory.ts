/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TicTacToe, TicTacToeInterface } from "../TicTacToe";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "Draw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "player1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "player2",
        type: "address",
      },
    ],
    name: "NewGame",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerWin",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_player2",
        type: "address",
      },
    ],
    name: "createNewGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gameById",
    outputs: [
      {
        internalType: "uint256",
        name: "gameBoard",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player1",
        type: "address",
      },
      {
        internalType: "address",
        name: "player2",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
    ],
    name: "getCurrentBoard",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_move",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
    ],
    name: "makeMove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b50610f24806100256000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633c8d9b281461005c5780635186a16b1461008c57806376623022146100a8578063d7c81b55146100da578063dea9456d146100f8575b600080fd5b61007660048036038101906100719190610a63565b610114565b6040516100839190610a9f565b60405180910390f35b6100a660048036038101906100a19190610b18565b610133565b005b6100c260048036038101906100bd9190610a63565b61028a565b6040516100d193929190610b67565b60405180910390f35b6100e26102f4565b6040516100ef9190610a9f565b60405180910390f35b610112600480360381019061010d9190610b9e565b6102fa565b005b6000806000838152602001908152602001600020600001549050919050565b600062100000905060405180606001604052808281526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681525060008060015481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506001547f4f86f00eeea99d1c108d41dfc5bf41537f4e905376237fac4b70cd607551b4f68484604051610265929190610bde565b60405180910390a26001600081548092919061028090610c36565b9190505550505050565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60015481565b8060008082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806103ca575060008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610409576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040090610cdb565b60405180910390fd5b6000806000848152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000600160128360000151901c1690506000826020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610530576001610533565b60005b60ff16905080821461057a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057190610d47565b60405180910390fd5b60008360000151905060006001601383901c161480156105a05750600180601483901c16145b6105df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d690610db3565b60405180910390fd5b6000600188901b905060006001826105f79190610dd3565b90506001808385901c16148061061257506001808285901c16145b15610652576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064990610e53565b60405180910390fd5b60098910610695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068c90610e53565b60405180910390fd5b8360018a901b6106a59190610dd3565b6001901b8318925062040000831886600001818152505060006106cc858860000151610891565b90506001810361078d57600085036107325762100000876000015118876000018181525050887fab752bc10a81e9689c5aa42e23d7ecd59799f9758c37855cc7f7b7a17c751f6d88602001516040516107259190610e73565b60405180910390a2610788565b600062180000905080886000015118886000018181525050897fab752bc10a81e9689c5aa42e23d7ecd59799f9758c37855cc7f7b7a17c751f6d896040015160405161077e9190610e73565b60405180910390a2505b6107d7565b600281036107d65762080000876000015118876000018181525050887f3fd10e0b772395f38ab47fc59126002084ce1e04d2b65432f5c90bbd9e23399960405160405180910390a25b5b866000808b81526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050505050505050505050565b6000826003603f6108a29190610ebd565b901b603f8316036108b65760019050610a22565b6006836003603f6108c79190610ebd565b901b901b6006603f901b8316036108e15760019050610a22565b600c836003603f6108f29190610ebd565b901b901b600c603f901b83160361090c5760019050610a22565b8260036130c361091c9190610ebd565b901b6130c38316036109315760019050610a22565b60028360036130c36109439190610ebd565b901b901b60026130c3901b83160361095e5760019050610a22565b60048360036130c36109709190610ebd565b901b901b60046130c3901b83160361098b5760019050610a22565b8260036203030361099c9190610ebd565b901b620303038316036109b25760019050610a22565b8260036133306109c29190610ebd565b901b6133308316036109d75760019050610a22565b60005b6009811015610a1c576000600184161480156109f95750600060028416145b15610a08576000915050610a22565b600283901c925080806001019150506109da565b50600290505b92915050565b600080fd5b6000819050919050565b610a4081610a2d565b8114610a4b57600080fd5b50565b600081359050610a5d81610a37565b92915050565b600060208284031215610a7957610a78610a28565b5b6000610a8784828501610a4e565b91505092915050565b610a9981610a2d565b82525050565b6000602082019050610ab46000830184610a90565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ae582610aba565b9050919050565b610af581610ada565b8114610b0057600080fd5b50565b600081359050610b1281610aec565b92915050565b60008060408385031215610b2f57610b2e610a28565b5b6000610b3d85828601610b03565b9250506020610b4e85828601610b03565b9150509250929050565b610b6181610ada565b82525050565b6000606082019050610b7c6000830186610a90565b610b896020830185610b58565b610b966040830184610b58565b949350505050565b60008060408385031215610bb557610bb4610a28565b5b6000610bc385828601610a4e565b9250506020610bd485828601610a4e565b9150509250929050565b6000604082019050610bf36000830185610b58565b610c006020830184610b58565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c4182610a2d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c7357610c72610c07565b5b600182019050919050565b600082825260208201905092915050565b7f796f7520617265206e6f742074686520706c6179657200000000000000000000600082015250565b6000610cc5601683610c7e565b9150610cd082610c8f565b602082019050919050565b60006020820190508181036000830152610cf481610cb8565b9050919050565b7f4e6f7420796f7572207475726e00000000000000000000000000000000000000600082015250565b6000610d31600d83610c7e565b9150610d3c82610cfb565b602082019050919050565b60006020820190508181036000830152610d6081610d24565b9050919050565b7f47616d652068617320656e646564000000000000000000000000000000000000600082015250565b6000610d9d600e83610c7e565b9150610da882610d67565b602082019050919050565b60006020820190508181036000830152610dcc81610d90565b9050919050565b6000610dde82610a2d565b9150610de983610a2d565b9250828201905080821115610e0157610e00610c07565b5b92915050565b7f696e76616c6964206d6f76650000000000000000000000000000000000000000600082015250565b6000610e3d600c83610c7e565b9150610e4882610e07565b602082019050919050565b60006020820190508181036000830152610e6c81610e30565b9050919050565b6000602082019050610e886000830184610b58565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ec882610a2d565b9150610ed383610a2d565b925082610ee357610ee2610e8e565b5b82820490509291505056fea2646970667358221220254aad9e1281eca782417936c37dfbdd1c1dc67098f630e00502783d0aab1cf264736f6c63430008130033";

export class TicTacToe__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TicTacToe> {
    return super.deploy(overrides || {}) as Promise<TicTacToe>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TicTacToe {
    return super.attach(address) as TicTacToe;
  }
  connect(signer: Signer): TicTacToe__factory {
    return super.connect(signer) as TicTacToe__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicTacToeInterface {
    return new utils.Interface(_abi) as TicTacToeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TicTacToe {
    return new Contract(address, _abi, signerOrProvider) as TicTacToe;
  }
}
