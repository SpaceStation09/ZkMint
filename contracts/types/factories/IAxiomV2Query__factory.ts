/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IAxiomV2Query, IAxiomV2QueryInterface } from "../IAxiomV2Query";

const _abi = [
  {
    inputs: [],
    name: "AggregateVkeyHashIsNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "AxiomHeaderVerifierAddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "AxiomProverAddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "AxiomResultStoreAddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CallbackExtraDataHashDoesNotMatch",
    type: "error",
  },
  {
    inputs: [],
    name: "CallbackHashDoesNotMatchQueryWitness",
    type: "error",
  },
  {
    inputs: [],
    name: "CanOnlyIncreaseGasOnActiveQuery",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotFulfillFromOffchainIfNotInactive",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotFulfillIfNotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotRefundBeforeDeadline",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotRefundIfNotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotRefundIfNotRefundee",
    type: "error",
  },
  {
    inputs: [],
    name: "ComputeResultsHashDoesNotMatch",
    type: "error",
  },
  {
    inputs: [],
    name: "DepositTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "EscrowAmountExceedsBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "EscrowIsNotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "GuardianAddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "NewMaxQueryPriMustBeLargerThanPrevious",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyCallerCanIncreaseGas",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyPayeeCanUnescrow",
    type: "error",
  },
  {
    inputs: [],
    name: "ProofVerificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "QueryHashDoesNotMatchProof",
    type: "error",
  },
  {
    inputs: [],
    name: "QueryIsNotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "QueryIsNotFulfilled",
    type: "error",
  },
  {
    inputs: [],
    name: "QueryIsNotInactive",
    type: "error",
  },
  {
    inputs: [],
    name: "SourceChainIdDoesNotMatch",
    type: "error",
  },
  {
    inputs: [],
    name: "TimelockAddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "UnescrowAmountExceedsEscrowedAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "UnfreezeAddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "VerifierAddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalAmountExceedsFreeBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateVkeyHash",
        type: "bytes32",
      },
    ],
    name: "AddAggregateVkeyHash",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Escrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
    ],
    name: "OffchainQueryFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "deadlineBlockNumber",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "maxFeePerGas",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "callbackGasLimit",
        type: "uint32",
      },
    ],
    name: "QueryFeeInfoRecorded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "payee",
        type: "address",
      },
    ],
    name: "QueryFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "maxFeePerGas",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "callbackGasLimit",
        type: "uint32",
      },
    ],
    name: "QueryGasIncreased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "queryHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "userSalt",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "refundee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "QueryInitiatedOnchain",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "queryHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "userSalt",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "ipfsHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "refundee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "QueryInitiatedWithIpfsData",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "refundee",
        type: "address",
      },
    ],
    name: "QueryRefunded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateVkeyHash",
        type: "bytes32",
      },
    ],
    name: "RemoveAggregateVkeyHash",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "refundee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountUsed",
        type: "uint256",
      },
    ],
    name: "Unescrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "UpdateAxiomHeaderVerifierAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "UpdateAxiomProverAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newAxiomQueryFee",
        type: "uint256",
      },
    ],
    name: "UpdateAxiomQueryFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "UpdateAxiomResultStoreAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "newProofVerificationGas",
        type: "uint32",
      },
    ],
    name: "UpdateProofVerificationGas",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "newQueryDeadlineInterval",
        type: "uint32",
      },
    ],
    name: "UpdateQueryDeadlineInterval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "UpdateVerifierAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "payee",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payor",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "snapshotPmmrSize",
            type: "uint32",
          },
          {
            internalType: "bytes32[]",
            name: "proofMmrPeaks",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "mmrComplementOrPeaks",
            type: "bytes32[]",
          },
        ],
        internalType: "struct IAxiomV2HeaderVerifier.MmrWitness",
        name: "mmrWitness",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "computeResults",
        type: "bytes32[]",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct IAxiomV2Query.AxiomV2Callback",
        name: "callback",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "userSalt",
        type: "bytes32",
      },
    ],
    name: "fulfillOffchainQuery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "snapshotPmmrSize",
            type: "uint32",
          },
          {
            internalType: "bytes32[]",
            name: "proofMmrPeaks",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "mmrComplementOrPeaks",
            type: "bytes32[]",
          },
        ],
        internalType: "struct IAxiomV2HeaderVerifier.MmrWitness",
        name: "mmrWitness",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "computeResults",
        type: "bytes32[]",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct IAxiomV2Query.AxiomV2Callback",
        name: "callback",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "userSalt",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "queryHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "callbackHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "refundee",
            type: "address",
          },
        ],
        internalType: "struct IAxiomV2Query.AxiomV2QueryWitness",
        name: "queryWitness",
        type: "tuple",
      },
    ],
    name: "fulfillQuery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "newMaxFeePerGas",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "newCallbackGasLimit",
        type: "uint32",
      },
    ],
    name: "increaseQueryGas",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "userSalt",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "queryHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "callbackHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "refundee",
            type: "address",
          },
        ],
        internalType: "struct IAxiomV2Query.AxiomV2QueryWitness",
        name: "queryWitness",
        type: "tuple",
      },
    ],
    name: "refundQuery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "sourceChainId",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "dataQueryHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "k",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "resultLen",
            type: "uint16",
          },
          {
            internalType: "bytes32[]",
            name: "vkey",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "computeProof",
            type: "bytes",
          },
        ],
        internalType: "struct IAxiomV2Query.AxiomV2ComputeQuery",
        name: "computeQuery",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct IAxiomV2Query.AxiomV2Callback",
        name: "callback",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userSalt",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "maxFeePerGas",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "callbackGasLimit",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "refundee",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "dataQuery",
        type: "bytes",
      },
    ],
    name: "sendQuery",
    outputs: [
      {
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "queryHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "ipfsHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct IAxiomV2Query.AxiomV2Callback",
        name: "callback",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userSalt",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "maxFeePerGas",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "callbackGasLimit",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "refundee",
        type: "address",
      },
    ],
    name: "sendQueryWithIpfsData",
    outputs: [
      {
        internalType: "uint256",
        name: "queryId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "userSalt",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "queryHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "callbackHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "refundee",
            type: "address",
          },
        ],
        internalType: "struct IAxiomV2Query.AxiomV2QueryWitness",
        name: "queryWitness",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountUsed",
        type: "uint256",
      },
    ],
    name: "unescrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IAxiomV2Query__factory {
  static readonly abi = _abi;
  static createInterface(): IAxiomV2QueryInterface {
    return new utils.Interface(_abi) as IAxiomV2QueryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAxiomV2Query {
    return new Contract(address, _abi, signerOrProvider) as IAxiomV2Query;
  }
}
